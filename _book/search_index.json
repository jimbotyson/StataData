[["index.html", "Data Manipulation and Analysis in Stata 1 Introduction", " Data Manipulation and Analysis in Stata 1 Introduction Data manipulation is the process of cleaning, organising and preparing data in a way that makes it suitable for analysis. Most real-world datasets require some form of manipulation to facilitate the downstream analysis and this process is often repeated a number of times during the data analysis cycle. In this series you will learn how to manipulate raw data and prepare it for analysis and then to carry out simple analysis of yur data. The following topics are covered in the series: Learning to use multiple frames to work on data Merging data sets, with and without frames creating and dropping variables using preserve and `restore creating subsets of d Reshaping data between long and wide form Last Updated: Jan 31, 2022 3:16 PM "],["acknowledgments.html", "2 Acknowledgments", " 2 Acknowledgments Content of this workshop is based on the following: Data Manipulation in R Which is Altaf Alis Excellent web based tutorial on using tidy data in R. This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License. "],["getting-started.html", "3 Getting Started 3.1 Prerequisites 3.2 Software Requirements", " 3 Getting Started 3.1 Prerequisites Basic knowledge of working with data in Stata is essential. This course assumes that youre comfortable with reading datasets, working with do files, and navigating the Stata interface. 3.2 Software Requirements 3.2.1 Stata Release 17 or later. Recent versions of Stata, 17 or later are required. You can check your version from the command line with: version "],["some-using-stata-basics.html", "4 Some using Stata basics 4.1 Folders 4.2 Exercise 4.3 Common File types 4.4 The do file 4.5 Initiating your script 4.6 Exercise 4.7 Dataset 4.8 Exercise", " 4 Some using Stata basics 4.1 Folders I assume that you have a folder structure like Project Folder  raw data  scripts   cleanmydata.do   modelmydata.do  documentation   PDFs   Word_docs graphs Of course, other folder set-ups are possible, so be aware of your own as you follow the rest of this guide. I assume that the path to your project is c:\\users\\jt\\Documents\\Projects\\StataWrangling 4.2 Exercise If you do not have a folder for your project (including for this training series project!), create one now with subfolders as above. You do not need to create the two do files in the scripts folder. You can do this in Stata if you know how or using your computers user interface. 4.3 Common File types You will commonly encounter three types of file specific to Stata The .dta file which is Statas proprietary data format; The do file which is Statas scripting files; The .log file which is the file type recording session logs. 4.4 The do file Lets start off by creating a new do file: doedit newdo.do Clear everything to make sure theres nothing leftover in our environment clear all 4.5 Initiating your script In a new data wrangling script you should start a log; make sure you are in the correct project directory; clear working memory. So in your new do file add these lines: capture log close log using &quot;MainProjectName $S_DATE.log&quot;, append or cmdlog using &quot;CommandsProjectName $S_DATE.log&quot;, append to log commands only and not output. Next you should make sure you are in the correct directory. Normally for a data wrangling script, this will be the raw data directory for the project by adding a line like cd c:\\users\\jt\\Documents\\Projects\\StataWrangling\\raw data\\ (you must alter this to point at your folder) and then the line clear all to start with a clear workspace. 4.6 Exercise Close your the log file or log files you have created and outside of Stata find the files and view the content. 4.7 Dataset Were using a dataset of examination results from thirty school students. These data are in in csv format: comma seperated values. Each case or observation is a row with variables in rows seperated by commas. The Stata use command reads in data from Stata format files. Read the main data file: use https://www.ucl.ac.uk/~ccaajim/results When you first read a datafile, you should always describe the data; check the codebook. You can do this for the complete set of variables for simple cases, but you may wish to be selective when you have a lot of variables. 4.7.1 Data Types The examination data is quite simple. In your do file add describe codebook And run the do file. This first command produces The main Stata results screen showing the output of desc 4.7.2 Interpretation of describe output This output shows first how many observations there are in your data and how many variables. The table that follows includes some detail about each variable: Storage type There are two basic data types in Stata: numeric and string data. String data has two subtypes: strL (L for long) variables can store phenominal amounts of character data (2 billion) and str# (where # is a number) and have a limit on length of 2045 characters. Numeric data is of one of five types: type precision range byte integer -127 to 100 int integer -32,767 and 32,740 long integer -2,147,483,647 and 2,147,483,620 float real 8 digits of accuracy double real 16 digits of accuracy Format types are associated with variables - each has a default, which determines how values are displayed, so that regardless of the precision of the type, the number of decimal places and the width in number of characters to be displayed can be fixed. So a format type %9.0g is a left justified number of maximum 9 characters in width and with specific decimal precision (although in this case zero means just as many as can be displayed for this width). 4.7.3 Interpretation of codebook The output of codebook shows you the data type of the variables; the range and the numeric unit of measure; the number of unique values in the data; the number of values missing; the mean value for continuous variables; the standard deviation; the percentile values for the 10%, 25%, 50%, 75%, 90% points. The value of output from codebook is enhanced if you have taken care to label variables and values. 4.8 Exercise What are the types and formats of the variables maths, english, history? Why is maths different? "],["detecting-and-correcting.html", "5 Detecting and correcting 5.1 Exercise", " 5 Detecting and correcting In the data as you find it, there is an anomalous maths score. We can find this my simple inspection of the data because we have a small data set and few variables. If we had a larger data set with many variables this would be much more difficult. We will write some code to help us in the detection of variables. In Stata we can use programming functions that return values. Many functions return vales true or false. There is a function inrange(variable, min, max) that returns true if variable is less greater than min and less than max. We negate functions with the operator meaning not - !. 5.1 Exercise In your script add the following lines: gen anomaly = 0 replace anomaly = 1 if !inrange(maths,0,50) Are after you run these lines, are there any anomylous cases in your dataset? How many? The Stata symbol for or is | sometimes called bar or pipe. Alter the second line above so that it checks not only maths but the english, history and avxm variables as well. "],["selecting-variables-in-operations.html", "6 Selecting variables in operations 6.1 Exercise 6.2 The uses of _all 6.3 Exercise 6.4 Creating a custom variable list", " 6 Selecting variables in operations We will use the command list which displays rows of variable values to illustrate the selection of variables. With most commands, variables can be included in the varlist that follows a command name. So on the command line we can type list maths english history which displays all the values for those three variables. Much of the time this is the only selection of variables you need. But, there are times when you wish to select a subset of variables for manipulation perhaps for a series of operations. In this case we can use preserve and restore. The command preserve takes a snapshot of a data set. If we then manipulate or modify the data, we can return to the snapshot state with the command restore. You can now use drop varlist to remove variables from the workspace or keep varlist to specify variables to be kept in the workspace. Stata has a built in macro (Stata speak for a script variable) named _all that contains all the variable names currently in memory. 6.1 Exercise Add the following lines to your script preserve keep maths english history summarize _all restore What is the effect of these lines? How many variables are in working memory after the keep command? How many variables are in working memory after the restore command? 6.2 The uses of _all The \\_all macro is obviously useful. but as the exercise shows, it can be more useful combined with drop and keep. The command drop varlist removes variables from the workspace, while keep varlist drops all but the named variables. So, if we want to produce summary statistics for all continuous variables in our data, we can use keep followed by the list of names and then calculate the summaries. 6.3 Exercise Add the following lines to your script preserve keep maths english history tabstat _all, statistics(mean sd var kurt skew) restore Answer these questions: What is the Skewness of the mathematics scores? Which scores show more variability, English or History? Which subject has the lowest mean score? 6.4 Creating a custom variable list Since many commands take a list of variables to operate on, it can be useful to create a specific list of variables that you can easily refer to repeatedly. We will do this with a Stata global macro. Add the following lines to your script global conts maths english history summarize $conts Since in this case we dont drop any variables, we dont preserve and restore. "],["labelling.html", "7 Labelling", " 7 Labelling Variable names are not always very human friendly. It is useful therefor to be able to attach a label to a variable, especially for using in output such as graphs. Add the following line of code to your script label variable sex &quot;Gender&quot; now use the table command to view a table of frequencies of the sex variable. What has been the effect of your line of code? "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
